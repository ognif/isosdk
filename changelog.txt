changelog

9.6.4
- Complete Decryption integration (No driver is needed)
- Complete Decompressing integration (No driver is needed)
- Updated dotNet Assembly for Decryption and Decompressing
- Updated ImageEdit Sample for MFC, FoxToolkit and dotNet
- Fixed reported non crytical Memory leaks
- Removed complete Delphi depencies, samples and VCL
- New license structure and pricing.

9.6.2
- Fixed device name issue
- Fixed device accees in .Net
- Fixed Memory leaks with Andorid
- Updated USBToSCSI with Android, find now now multiple USB-C devices
- Added ARM support
- Fixed multidevice burning on Linux (more than 10 devices)

- Renamed FoxSDKCore to better identify for linking
- Updated CPP Samples
- Updated .NET Samples
- Optmized FoxSDK header files
- Updated JNI Wrapper

- New QT Console sample and workspace for samples.

- Removed COM from FoxSDK
- Removed VB6 Samples from FoxSDK
- Removed VBNet Samples from FoxSDK

9.1.3
Added bass library for grab and encode audio
Added options for new encoders (Quality)
Added bass mixer to burn AudioCD from mono or multichanel files
Fixed SetLanguage function
Fixed Fox-Toolkit samples
Fixed crash in dotNet Assembly while grab audio
Added new Api functions to add and work with burn and read devices by index not by drive letter
Added WindowsXP binaries (XP2008)


9.0.1
Long file path for Windows (0x8000)
Delphi VLC fix
Better thread termination for Node.js
Updated code for new compiler Flag “MOBILE” in Android.
Andorid API for Android Studio and QT for Android.
Sample for Android Studio and QT for Android
JNI (Java Native Interface) Sample  for Android Studio
macOS dynamic library without XQuartz.
Dynamic library without any UI related depencies.
‘armeabi-v7a‘, ‘arm64-v8a‘, ‘x86‘, ‘x86_64‘

8.4.2.0
CopyDisk now works with common burn options, like AutoErase.
CopyDisk now works with BD-RE formating
CopyDisk now works cross media*
Fixed threading problem with dotNet component while audio grabbing.
Re-Added FoxEncodeLib to Win32 installer.
Updated UtilitiesSample.

8.3.8.0
Update for 8.3.7.0 with fixed issue in CreateImage and CopyDisk function

8.3.7.0
Compiled with latest C++ Standards & Toolkits for faster and more secure functionality. *
Added BassLib for audio decoding. **
Added BassLib plugin support.
Added AudioFileSize method to get decoded file size on disc.
Added Imagesize method for Audio and Mixed Mode projects.
Fixed RockRidge error with MixedMode project.
Optimized BD-RE erase function.
Added Sector verify to CreateImage & CopyDisk Interface.
Added Events for Sector verify available.
Added Verify Buffer size to CreateImage & CopyDisk structure.
Added BD-ROM support to CopyDisk Interface (Suiteable for Virtual Drives).
Updated dotNet & Delphi componet.

8.1.4.5
Fixed negative GMT times according to the OSTA specs.
Fixed memory allocation problems with some structures on macOS
Updated macOS builds to work with Mojave
Prepared iOS integration. (For enterprise customers only)

8.1.3.2
Extended virtual Memory allocation for Android.
Fixed license key issue with some new license keys.

8.1.3.1
Fixed virtual Memory allocation.
Updated QT lib structure.
Better Google and AWS Cloud integration
Delphi: Fixed some buffer overflow problems while authoring BD-XL
Backup Driver: Added Veritas & Barracuda support
Added Visual Studio 2017 with dotNet 4.7 dependency.
Preparation for HFS+.

7.0.2
Fixed unsecure buffer handling in some functions.
Added DirExists method to check if a directory exists in a project.
Delphi: Added ForceDirctoryEx to VLC component
Delphi: Fixed some function calls
Removed 2005, 2008 and 2012 dotNet components. 2010 and 2015 with client profile are available now.
FoxSDK Cloud now support clustering.

6.8.5
NEW: Some compatibility fixes for Windows 10
Fix some problems while end Foxurner SDK from Delphi App.
Fix verify problem in some projects.

6.8.4
Fixed an issue when GetNumberOfFiles() function may return the BS_SDK_ERROR_BAD_REQUEST error if an user added a directory with the name that already exists in the imported session.
Return the BS_SCSI_ERROR_READ_01 error code from Burn() if an I/O error occurs while reading one of the files added to the project.
Don’t allow the user to change finalization flag for BluRay project and always finalize discs for this project type. Non-finalized BluRay discs may not be readable by some hardware players.
Add the TFoxBurnerSDK.SaveLogToFile() method that allows to save FoxSDK log to a file in Delphi.

6.8.3
Verify with files bigger than 2 GB optimized.
Fixed some internal issues.

6.8.2
Added GetFileAllocationTable to .Net component and sample.
Fixed the bug in .NET wrapper when CompareFilesForArrangementEvent is invoked with wrong arguments.
Fixed the issue in COM object that causes a memory leak and may cause a crash in an application that uses FoxBurner COM object.
Fixed the issue when an attempt to burn on a rewritable medium with auto-erase enabled results in “Selected project type is incompatible with session being imported” error, if the RW medium is not empty and already contains a file system different from the file system being burned.
Use direct disc reading for verification of the burned files instead of OS file I/O functions. This lets us to not release the disc to operating system prematurely after a burn, thus preventing conflicts.
Set maximum value of “Retry Count” spin controls in Utilities sample to 300, because the default value of 100 is less than returned by default by some drives.
Fixed the issue when not all burned files are reported by BurnFileEvent and VerifyFileEvent.

6.8.1
Optimized file extration function.
Updated sorting feature in dotNet.
Fixed sorting feature to Blu-ray project type.
Updated help files for VCL, COM Dll and dotNet.
Added GetFileAllocationTable() that allows to get the allocation table for any file in file system.

6.7.3
Updated sorting feature for better performance.
Added missing Samples/C++/Common/FolderPickerDialog.cpp file into setup package.
Disabled Rescan button in Burn and Erase standard dialogs during a burn or erase process.
Fixed the issue when ReadDirectory() function returns extra backslash in SFileEntry.lpszFilePath.
Prevent the sending of a media removal notification and a media arrival notification on Windows after some operations not related to burning, such as import of a file.
Added missing icon files for Delphi sample applications, FileProperties.pas and FileProperties.dfm files for Delphi DataSample to the setup package.

6.7.0
Fixed the issue when some of the files extracted from MRW-formatted UDF discs were broken;
Preserve original creation, modification and last access time of files and directories during import;
Fix the issue when the SDK could incorrectly detect the sector size of an ISO image file;
Fixed the issue that could cause disc verification to fail unreasonably;
Added the file arrangement (sorting) feature. This new feature gives user the control over the arrangement of files on the burned discs. Added file priority feature to the MFC DataSample application to demonstrate file arrangement;
Added SFileEntry.pUserParam member variable and SetFileUserParam() function, which can be used to associate application-specific data with any file or directory in a project;
Added GetFileEntry() API function that can be used to retrieve the SFileEntry structure for any file in a project by its path;
Automatically mark the BluRay-Video files in /BDMV/STREAM and /BDAV/STREAM directories of UDF filesystem as real-time;
Fixed the issue when the settings panel of the standard MFC BurnDialog could display incorrectly if the dialog has been moved to another position on the screen;
Fixed the erase progress measurement algorithm to be more precise and stable;
Added detection of a drive’s BD-R XL and BD-RE XL read and write capabilities;
Fixed the issue when the timestamps on directories in UDF files system always default to the time when directories have been added to the project;
Updated FoxBurner SDK Guide and API Reference;

6.6.1
Fixed issues that caused crashes during decoding of audio files on 64-bit builds for Linux and Mac OS X;
Fixed the issue when BluRay project could produce corrupted UDF image;
Fixed the issue in UDF parser that could cause a crash when reading discs and images in MRW format on drives that don’t support Mt.Rainier feature.

6.6.0
Added support for reading discs and images in MRW format on drives that don’t support Mt.Rainier feature.
Added support for importing UDF embedded files.
Added support for importing multi-extent files.
Lock device for exclusive access during a burning process while using SPTI.
Fixed the BD-R discs burning errors that can occur on some Pioneer drives (e.g. Pioneer BDR-206M).
Fixed the issue that may cause a crash in the version of the SDK that uses FOXToolkit UI.
Fixed wrong format specifier in German and Spanish language strings with ID_0502.
Fixed the issue in image creator that could cause broken images to be produced.
Fixed the issue in ImageEditMFC sample application that caused CUE/BIN images to be produced instead of ISO images.
Fixed the issue in both FOXLib and MFC DataSample applications that have been causing a CUE/BIN image to be burned as an ISO image and making the resulting disc unreadable.
Fixed the “A general error occured” error that could occur during preparation of a Blu-Ray disc image, if the latter includes extra files in the root directory.
Fixed the issue when FoxSDK doesn’t detect any CD/DVD/BD devices on Mac OS X in 64-bit mode.

6.5.1
Fixed bug (6.5.0) when after call to EnableImageDevice() or RescanDevices() the list of available drives contains duplicate items.
Disabled burn simulation that was enabled by default in VBDataSample.
Fixed issue when AudioDecodeDoneEvent callback is called twice for the same file.
Build FOXToolkit as static library on Windows because of some problems, which arise when it is used as DLL.
To avoid multi-threading conflicts in applications using FoxSDK COM component, all events are now sent in the context of the main thread.
FoxBurnerSDK Installer for Windows is now signed to avoid conflicts with security software products.

6.5.0
Fixed the BD-RE burning errors that can occur on some Pioneer drives (e.g. Pioneer BDR-206M).
Added Xcode project to the Mac OS X installation package.
Fixed the bug in Delphi component that caused access violation after setting the Active property to True at design time.
Fixed DeviceReady property in TFoxBurnerSDK Delphi component. The property have been returning ready status for wrong device index.
Fixed the issue that might cause write error at the end of the burning process on DVD-R and DVD-RW discs in DAO mode.
Optimized data buffering during the burning process.
Optimized data transfer during the burning process for modern burners.
Ready for FireMonkey 2.
Fixed the issue when application on Windows using native x64 FoxSDK might crash after adding a file to some of the projects.
Fixed the issue in SPTI layer that can led to unpredictable behavior during a disc burning or disc reading in an application using x64 native build of the FoxSDK for Windows.
Fix the issue when adding the empty directory or directory tree containing empty subdirectories on Linux and Mac OS X caused the AddDir() function to return the BS_SDK_ERROR_INVALID_SRC_PATH error code.

6.4.5
Added support for opening ISO images with non-standard sector size.
Added the ability to COM wrapper to lock/unlock medium in the drive.
Fixed the bug in when a language file couldn’t be loaded, if file name with full path was passed to SetLanguage().
Fixed access violation errors that might occur during loading of a language file.
Fixed the bug in Delphi component when TFoxBurnerSDK.DataProjectSize property always returned zero on Mac OS X.
Fixed the issue when a program using FoxSDK hung during erase of a disc in USB drive, after the drive has been unexpectedly disconnected.
Fixed the bug when CreateDirEvent callback was never called for any of the project types.
Call all event handlers of Delphi TFoxBurnerSDK component in the context of main thread to prevent multi-threading conflicts.
Fixed the bug when during checking the compatibility of current project with imported file system on multi-session disc, the check was always performed against last recorded session, instead of session being imported.

6.4.2
Fixes the issue when a file or directory with hidden attribute-set is written on the disc with UDF file system as a normal file without attribute.
Does not eject discs before the burn verification has been processed.
Adds ability to NSIS installer to insert FoxSDK binary directories to system PATH variable.
Adds the ability to change the ImplementationID in UDF file system. For that purpose new API functions GetUDFOptionsEx() and SetUDFOptionsEx() are introduced. They set the ImplementationID, and also allow to selectively receive other options of the UDF file system.
Fixes the issue in Delphi component when any of the previous session can’t be imported for any project type other than ptData.
Updates Delphi component to work with FireMonkey and Mac OS X.
Adds Delphi FireMonkey Data Sample application.
Adds support for native x64 compilation to Delphi component and samples.
Fixes the bug in Delphi component where the ISO level is one-based in FoxSDK, but set as zero-based by Delphi component.
Adds support for Win64 and Mac OS X platforms during design-time in Delphi XE2.
Returns an error if Prepare() is called for empty project.

6.1.2
Udpated disk notification management on Windows to force system to refresh new created disk
Updated EncLib tag write module
Improved verify
Fixed time difference while import files from other session


Important Info for dotNet users:
Please update your references inside the C# samples.

Important Info for Delphi users:
Because VCL is a installed and referenced component, you strongly have to change the paths in Delphi. Else the SDK cannot load the DLL file.

Make sure that VCL component is uninstalled with Delphi
Install VCL component from new installed FoxBurner SDK
Update your paths in Delphi to the VCL component files.
Library Path:  <install>/Delphi/Win32/Release
Search Path/Browsing Path: <install>/Delphi/